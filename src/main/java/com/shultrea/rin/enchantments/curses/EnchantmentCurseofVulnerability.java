package com.shultrea.rin.enchantments.curses;

import com.shultrea.rin.Interfaces.IEnchantmentProtection;
import com.shultrea.rin.Main_Sector.ModConfig;
import com.shultrea.rin.enchantments.base.EnchantmentCurse;
import com.shultrea.rin.registry.EnchantmentRegistry;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.enchantment.EnchantmentHelper;
import net.minecraft.enchantment.EnchantmentProtection;
import net.minecraft.enchantment.EnumEnchantmentType;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraftforge.event.entity.living.LivingHurtEvent;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class EnchantmentCurseofVulnerability extends EnchantmentCurse {
	
	public EnchantmentCurseofVulnerability(String name, Rarity rarity, EnumEnchantmentType type) {
		super(name, rarity, type, new EntityEquipmentSlot[]{
				EntityEquipmentSlot.HEAD, EntityEquipmentSlot.CHEST, EntityEquipmentSlot.LEGS,
				EntityEquipmentSlot.FEET});
	}
	
	@Override
	public boolean isEnabled() {
		return ModConfig.enabled.curseOfVulnerability;
	}
	
	@Override
	public boolean hasSubscriber() {
		return true;
	}
	
	@Override
	public int getMaxLevel() {
		return ModConfig.level.curseOfVulnerability;
	}
	
	//TODO
	@Override
	public int getMinEnchantability(int par1) {
		return 20 + (par1 - 1) * 10;
	}
	
	//TODO
	@Override
	public int getMaxEnchantability(int par1) {
		return this.getMinEnchantability(par1) + 30;
	}
	
	@Override
	public boolean isTreasureEnchantment() {
		return ModConfig.treasure.curseOfVulnerability;
	}
	
	@Override
	public boolean canApplyTogether(Enchantment ench) {
		return !(ench instanceof IEnchantmentProtection) && !(ench instanceof EnchantmentProtection) && super.canApplyTogether(ench);
	}
	
	@SubscribeEvent(priority = EventPriority.LOW)
	public static void onLivingHurtEvent(LivingHurtEvent event) {
		if(event.getEntityLiving() == null) return;
		int level = EnchantmentHelper.getMaxEnchantmentLevel(EnchantmentRegistry.curseOfVulnerability, event.getEntityLiving());
		if(level > 0) {
			event.setAmount(event.getAmount() * (1.0F + (float)level * 0.40f));
		}
	}
}